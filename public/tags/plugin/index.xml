<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugin on gywn&#39;s tech</title>
    <link>//localhost:1313/tags/plugin/</link>
    <description>Recent content in Plugin on gywn&#39;s tech</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>gywndi@gmail.com (gywndi)</managingEditor>
    <webMaster>gywndi@gmail.com (gywndi)</webMaster>
    <lastBuildDate>Sun, 15 Sep 2019 11:50:15 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/plugin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL InnoDB의 메모리 캐시 서버로 변신! – 설정편 –</title>
      <link>//localhost:1313/2019/09/mysql-innodb-as-cache-server-config/</link>
      <pubDate>Sun, 15 Sep 2019 11:50:15 +0000</pubDate><author>gywndi@gmail.com (gywndi)</author>
      <guid>//localhost:1313/2019/09/mysql-innodb-as-cache-server-config/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;&#xA;&lt;p&gt;꽤나 오래전의 일이었습니다. MariaDB에서 Handler Socket이 들어간 이후 얼마 후인 것으로 기억합니다. &lt;strong&gt;MySQL lab버전에 memcached plugin 기능이 추가&lt;/strong&gt;되었고, &lt;strong&gt;memcache protocal로 InnoDB 데이터에 직접 접근&lt;/strong&gt;할 수 있는 길이 열린 것이었죠. (아마도 거의 8년 정도 전의 일이었던 것같은..) 아무튼 당시, 이것에 대해 간단하게 테스트만 해보고, MySQL을 캐시형태로 잘 활용할 수 있겠다라는 희망만 품고 지나버렸다는 기억이 나네요.&lt;/p&gt;&#xA;&lt;p&gt;이제 Disk는 과거의 통돌이 디스크가 아니죠. 기계 장치를 탈피하여, 이제는 모터없는 전자기기.. &lt;strong&gt;SSD의 시대가 도래&lt;/strong&gt;하였습니다. 통돌이 대비, 어마어마한 수치의 Random I/O를 제공해주는만큼, 이제 DB 데이터에 새로운 패러다임(?)으로 접근할 수 있겠다는 시점이 온 것 같아요.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
