<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backup on gywn&#39;s tech</title>
    <link>//localhost:1313/tags/backup/</link>
    <description>Recent content in Backup on gywn&#39;s tech</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>gywndi@gmail.com (gywndi)</managingEditor>
    <webMaster>gywndi@gmail.com (gywndi)</webMaster>
    <lastBuildDate>Tue, 19 Aug 2025 20:14:31 +0900</lastBuildDate>
    <atom:link href="//localhost:1313/tags/backup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Hot Copy(hcp) – Snapshot Tool</title>
      <link>//localhost:1313/2013/12/let-me-know-linux-hot-backup/</link>
      <pubDate>Tue, 10 Dec 2013 03:53:02 +0000</pubDate><author>gywndi@gmail.com (gywndi)</author>
      <guid>//localhost:1313/2013/12/let-me-know-linux-hot-backup/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;&#xA;&lt;p&gt;몇 달전 Linux Hot Copy(HCP) 유틸리티가 무료로 풀리면서, 고가의 스냅샷 유틸리티를 구입 없이도 얼마든지 사용할 수 있게 되었습니다. 스냅샷을 멋지게 활용할 수 있다면, 단순히 데이터 백업 뿐만 아니라 DB 시스템과 같이 복잡하게 얽혀서 구동되는 데이터도 특정 시점으로 데이터를 복사할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;이 경우 Linux Hot Copy(hcp)에 대해 알아보도록 하겠습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;feature&#34;&gt;Feature&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Point-in-Time 디스크 볼륨 스냅샷&lt;/li&gt;&#xA;&lt;li&gt;Copy on Write 방식의 Snapshot&lt;/li&gt;&#xA;&lt;li&gt;서비스 영향없이 스냅샷을 생성&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;snapshot-비교&#34;&gt;&amp;lt;Snapshot 비교&amp;gt;&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Copy-on-Write&lt;/strong&gt;&lt;br&gt;&#xA;Write 시 원본 데이터 Block을 Snapshot 스토리지로 복제하는 방식으로 Snapshot 데이터 Read 시 변경되지 않은 데이터는 원본 블록에서,변경된 데이터는 Snapshot 블록에서 처리&lt;br&gt;&#xA;데이터 변경 분만 저장하므로 공간을 효율적으로 활용하나 블록 변경 시 원본 데이터와 스냅샷 데이터 양쪽 모두에서 Write이 발생&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Redirect-on-Write&lt;/strong&gt;&lt;br&gt;&#xA;Copy-on-Write와 유사하나, 원본 볼륨에 대한 Write을 별도의 공간에 저장하는 방식으로 Copy-on Write(원본 Read, 원본 Write, 스냅샷 Write)에 비해 Write이 1회만 발생하나, 스냅샷 해제 시 변경된 블록들을 원본 데이터 블록으로 Merge시켜야함&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Split mirror&lt;/strong&gt;&lt;br&gt;&#xA;원본 볼륨과 동일한 사이즈의 별도 복제 볼륨 생성하는 방식으로 데이터를 Full Copy하므로 즉시 생성이 어렵고 용량 또한 많이 필요&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;&#xA;&lt;p&gt;설치 버전을 다운로드 하기 위해서는 하단 페이지에서 등록해야하는데, 등록하게 되면 설치 바이너리를 다운로드 받을 수 있는 별도의 링크를 메일로 보내줍니다. 완벽한 오픈소스는 아닌지라.. 설치하기가 조금은 짜증이 나지만.. 일단은..뭐.. ㅎㅎ&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
