<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FederatedX on gywn&#39;s tech</title>
    <link>//localhost:1313/tags/federatedx/</link>
    <description>Recent content in FederatedX on gywn&#39;s tech</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>gywndi@gmail.com (gywndi)</managingEditor>
    <webMaster>gywndi@gmail.com (gywndi)</webMaster>
    <lastBuildDate>Tue, 30 Dec 2014 13:12:02 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/federatedx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MariaDB의 FederatedX 엔진으로 데이터를 주물러보자.</title>
      <link>//localhost:1313/2014/12/mariadb-federatedx-usage/</link>
      <pubDate>Tue, 30 Dec 2014 13:12:02 +0000</pubDate><author>gywndi@gmail.com (gywndi)</author>
      <guid>//localhost:1313/2014/12/mariadb-federatedx-usage/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;&#xA;&lt;p&gt;FederatedX는 MariaDB에서 제공하는 확장된 기능의 Federated이며, 기본적으로 MariaDB에서는 별다른 옵션 없이 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;바로 이전 포스팅(&lt;a href=&#34;//localhost:1313/2014/12/how-to-migrate-100million-with-federatedx/&#34;&gt;MariaDB의 FederatedX 엔진을 활용한 9억 데이터 이관기&lt;/a&gt;)에서는 이 FederatedX 엔진을 활용하여 대용량 테이블을 서비스에 큰 지장없이 이관을 했던 사례에 대해서 정리를 했었는데요. 이 경험을 바탕으로 서비스에서 조금 더 유용하게 활용할 수 있을 방안에 대해서 상상(?)을 해보았습니다.&lt;/p&gt;&#xA;&lt;p&gt;즉, 지금부터는 FederatedX 엔진 관련된 테스트를 바탕으로 정리하는 내용이오니, 만약 실 서비스에 적용하고자 한다면 반드시 검증 후 진행하셔야 합니다. ^^&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
